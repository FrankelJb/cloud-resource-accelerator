#example of importing and EKS cluster via composition and attaching it to Anthos
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: import-aws-eks
  labels:
    crossplane.io/xrd: compositeclusters.demo.anthos.com
    provider: aws
    cluster: eks
spec:
  compositeTypeRef:
    apiVersion: demo.anthos.com/v1
    kind:  CompositeCluster
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.labels
  resources:
  - name: cluster
    base:
      apiVersion:  eks.aws.gke.cloud.google.com/v1beta1
      kind: Cluster
      metadata:
        name: eks-cluster # edit to match cluster name
        annotations:
          crossplane.io/external-name: eks-cluster # edit to match cluster name
      spec:
        forProvider:
          region: us-east-2  # edit to match cluster region
          roleArn: arn:aws:iam #edit to match arn 
          vpcConfig:
            - securityGroupIds:
              -  sg-0123
              subnetIds:
              - subnet-1 #add each subnet
              - subnet-2 
              - subnet-3
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.managementPolicy
      toFieldPath: spec.managementPolicy
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.clusterName
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.location
      toFieldPath: spec.forProvider.region
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.roleArn
      toFieldPath: spec.forProvider.roleArn 
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.securityGroupIds
      toFieldPath: spec.forProvider.vpcConfig[0].securityGroupIds
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.subnetIds
      toFieldPath: spec.forProvider.vpcConfig[0].subnetIds
    - type: ToCompositeFieldPath
      fromFieldPath: spec.forProvider.region
      toFieldPath: status.region
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.identity[0].oidc[0].issuer
      toFieldPath: status.odicIssuerUrl
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: status.clusterName
    - type: ToCompositeFieldPath
      fromFieldPath: spec.atProvider.version
      toFieldPath: status.version
  
  - name: clusterauth
    base:
      apiVersion: eks.aws.gke.cloud.google.com/v1beta1
      kind: ClusterAuth
      metadata:
        name: clusterauth
        labels:
         role: controlplane
      spec:
        forProvider:
          region: us-east-1
          clusterNameSelector:
            matchControllerRef: true
        writeConnectionSecretToRef:
          name: kubeconfig
          namespace: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.uid
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-ekscluster"
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.location
      toFieldPath: spec.forProvider.region
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.identity[0].oidc[0].issuer
      toFieldPath: status.odicIssuerUrl
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: status.clusterName
  - name: clusterbootstrap
    base:
      apiVersion: containerattached.gcp.gke.cloud.google.com/v1beta1
      kind: ClusterBootstrapJob
      metadata:
        name: installmanifest
        labels:
          name: attachedclusterbootstrap
      spec:
        forProvider:
          clusterConfig:
            project: ""
            id: ""
            location: us-east4
            platformVersion: "eks"
          clusterCredentials:
            source: Secret
            secretRef:
              namespace: default
              key: kubeconfig
    patches:
    - fromFieldPath: spec.parameters.k8sVersion
      toFieldPath: spec.forProvider.clusterConfig.platformVersion
      transforms:
      - type: map
        map:
          1.24: 1.24.0-gke.4
          1.25: 1.25.0-gke.4
          1.26: 1.26.0-gke.2
    - fromFieldPath: spec.parameters.clusterName
      toFieldPath: spec.forProvider.clusterConfig.id
    - fromFieldPath: spec.parameters.anthosGCPRegion
      toFieldPath: spec.forProvider.clusterConfig.location
    - fromFieldPath: spec.parameters.fleetProject
      toFieldPath: spec.forProvider.clusterConfig.project
    - fromFieldPath: metadata.uid
      toFieldPath: spec.forProvider.clusterCredentials.secretRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-ekscluster"
  - name: attachedCluster
    base:
      apiVersion: containerattached.gcp.gke.cloud.google.com/v1beta1
      kind: Cluster
      metadata:
        name: attachedcluster
      spec:
        forProvider:
          distribution: eks
          location: us-east4
          fleet:
          - project: "project/<project-number>"
    patches:
    - fromFieldPath: spec.parameters.k8sVersion
      toFieldPath: spec.forProvider.platformVersion
      transforms:
      - type: map
        map:
          1.24: 1.24.0-gke.4
          1.25: 1.25.0-gke.4
          1.26: 1.26.0-gke.2
    - fromFieldPath: status.odicIssuerUrl
      toFieldPath: spec.forProvider.oidcConfig[0].issuerUrl
    - fromFieldPath: spec.parameters.fleetProject
      toFieldPath: spec.forProvider.fleet[0].project
      transforms:
        - type: string
          string:
            fmt: "projects/%s"
    - fromFieldPath: spec.parameters.adminUsers
      toFieldPath: spec.forProvider.authorization[0].adminUsers
    - fromFieldPath: spec.parameters.anthosGCPRegion
      toFieldPath: spec.forProvider.location
    - fromFieldPath: spec.parameters.clusterName
      toFieldPath: metadata.annotations[crossplane.io/external-name]
